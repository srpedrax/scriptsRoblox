-- Carrega a Magic Library
local Magic = loadstring(game:HttpGet("https://raw.githubusercontent.com/srpedrax/Magic-Library/main/source/Source.lua"))()

-- Cria a janela principal
local Window = Magic:CreateWindow({
    Title = GameInfo.Name .. " | Depso"
})

-- Cria a aba principal
local MainTab = Window:MakeTab({
    Name = "Grow a Garden"
})

-- Sess√£o Auto-Plant
local PlantSection = Window:addSection(MainTab, { Name = "Auto-Plant ü•ï" })
SelectedSeed = { Selected = "" } -- estrutura simples para armazenar a sele√ß√£o
AutoPlant = { Value = false }
AutoPlantRandom = { Value = false }

Window:AddDropdown(PlantSection, {
    Name = "Seed",
    Options = {}, -- ser√° atualizado depois
    Default = "",
    Callback = function(opt)
        SelectedSeed.Selected = opt
    end
})

Window:AddToggle(PlantSection, {
    Name = "Enabled",
    Default = false,
    Callback = function(val)
        AutoPlant.Value = val
    end
})

Window:AddToggle(PlantSection, {
    Name = "Plant at random points",
    Default = false,
    Callback = function(val)
        AutoPlantRandom.Value = val
    end
})

Window:AddButton(PlantSection, {
    Name = "Plant all",
    Callback = function()
        AutoPlantLoop()
    end
})

-- Sess√£o Auto-Harvest
local HarvestSection = Window:addSection(MainTab, { Name = "Auto-Harvest üöú" })
AutoHarvest = { Value = false }
HarvestIgnores = {
    Normal = false,
    Gold = false,
    Rainbow = false
}

Window:AddToggle(HarvestSection, {
    Name = "Enabled",
    Default = false,
    Callback = function(val)
        AutoHarvest.Value = val
    end
})

Window:AddToggle(HarvestSection, {
    Name = "Ignore Normal",
    Default = false,
    Callback = function(val)
        HarvestIgnores.Normal = val
    end
})

Window:AddToggle(HarvestSection, {
    Name = "Ignore Gold",
    Default = false,
    Callback = function(val)
        HarvestIgnores.Gold = val
    end
})

Window:AddToggle(HarvestSection, {
    Name = "Ignore Rainbow",
    Default = false,
    Callback = function(val)
        HarvestIgnores.Rainbow = val
    end
})

-- Sess√£o Auto-Buy
local BuySection = Window:addSection(MainTab, { Name = "Auto-Buy üõí" })
SelectedSeedStock = { Selected = "" }
AutoBuy = { Value = false }
OnlyShowStock = { Value = false }

Window:AddDropdown(BuySection, {
    Name = "Seed",
    Options = {},
    Default = "",
    Callback = function(opt)
        SelectedSeedStock.Selected = opt
    end
})

Window:AddToggle(BuySection, {
    Name = "Enabled",
    Default = false,
    Callback = function(val)
        AutoBuy.Value = val
    end
})

Window:AddToggle(BuySection, {
    Name = "Only list stock",
    Default = false,
    Callback = function(val)
        OnlyShowStock.Value = val
    end
})

Window:AddButton(BuySection, {
    Name = "Buy all",
    Callback = function()
        BuyAllSelectedSeeds()
    end
})

-- Sess√£o Auto-Sell
local SellSection = Window:addSection(MainTab, { Name = "Auto-Sell üí∞" })
AutoSell = { Value = false }
SellThreshold = { Value = 15 }

Window:AddButton(SellSection, {
    Name = "Sell inventory",
    Callback = function()
        SellInventory()
    end
})

Window:AddToggle(SellSection, {
    Name = "Enabled",
    Default = false,
    Callback = function(val)
        AutoSell.Value = val
    end
})

Window:AddSlider(SellSection, {
    Name = "Crops threshold",
    Min = 1,
    Max = 199,
    DefaultValue = 15,
    Callback = function(val)
        SellThreshold.Value = val
    end
})

-- Sess√£o Auto-Walk
local WalkSection = Window:addSection(MainTab, { Name = "Auto-Walk üö∂" })
AutoWalk = { Value = false }
AutoWalkAllowRandom = { Value = true }
NoClip = { Value = false }
AutoWalkMaxWait = { Value = 10 }
AutoWalkStatus = { Text = "None" } -- s√≥ placeholder, Magic Library n√£o tem label din√¢mico diretamente

Window:AddToggle(WalkSection, {
    Name = "Enabled",
    Default = false,
    Callback = function(val)
        AutoWalk.Value = val
    end
})

Window:AddToggle(WalkSection, {
    Name = "Allow random points",
    Default = true,
    Callback = function(val)
        AutoWalkAllowRandom.Value = val
    end
})

Window:AddToggle(WalkSection, {
    Name = "NoClip",
    Default = false,
    Callback = function(val)
        NoClip.Value = val
    end
})

Window:AddSlider(WalkSection, {
    Name = "Max delay",
    Min = 1,
    Max = 120,
    DefaultValue = 10,
    Callback = function(val)
        AutoWalkMaxWait.Value = val
    end
})

-- Atualiza√ß√£o din√¢mica das op√ß√µes do dropdown para Seeds
local function UpdateSeedDropdowns()
    local seeds = {}
    local seedStockList = GetSeedStock(OnlyShowStock and OnlyShowStock.Value or false)
    for seedName in pairs(seedStockList) do
        table.insert(seeds, seedName)
    end

    -- Atualiza op√ß√µes nos dropdowns
    Window:GetDropdown(PlantSection):UpdateOptions(seeds)
    Window:GetDropdown(BuySection):UpdateOptions(seeds)
end

-- Atualiza as op√ß√µes a cada meio segundo
spawn(function()
    while wait(0.5) do
        UpdateSeedDropdowns()
    end
end)
